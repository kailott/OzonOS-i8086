Ozon Os- 16 битная (пока что) операционная система с поддержкой 
FAT12 (на уровне чтения). 
Формат исполняемых файлов - com (Зачатки MZ)
Макс. размер исполняемого файла < 64k
*************************
для сборки Ozon Os:
*компилируем файлы: 
kernel.asm
shell.asm
fddboot.asm
*Создаем образ дискеты и форматируем в FAT12
*записываем скомпилированный fddboot в Boot сектор
*Кидаем в образ файлы
kernel.com
SHELL.bin
*Запускаем в виртуальной машине
*************************
Системные функции:
******************
int 25h Работа с дискетой

Функции
00h Возвращает в AX версию драйвера
01h Чтение сектора
Параемтры : Bx = LBA , ES:DI = buffer
02h Возвращает в BX  первый кластер файла
Параметры: ES:DI = имя файла
03h Возвращает следующий за BX кластер
Параметры BX = текущий кластер
04h чтение цепочки кластеров
Параметры:es:di = buffer  BX = первый кластер цепочки
*****************
int 21h i/o функции
Функции
Функция 00h Возврат версии драйвера
Функция 01h вывод на экран ASCIIZ строки в позицию курсора в стандартном режиме
Параметры ES:DI = ASCIIZ строка
Функция 02h вывод ASCIIZ строки в позицию курсора в расширенном режиме
Параметры: ES:DI = ASCIIZ строка ,BL = Атрибут
При ошибке BX=-1
Функция 03h получение текущей видеостраницы и позиции курсора
Функция 04h чтение строки с клавиатуры, ES:DI = буффер
****************
int 0F5h Работа с памятью (Удалено )
Функции
00h возвращает в ax свободный сегмент памяти
01h Резервирует сегмент памяти.Возвращает в AX и BX адрес зарезервираванного сегмента
02h Освобождает ранее зарезервированный сегмент
*****************


